# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Node.js CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [22.x]
        #See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
      # - name: npm ci, build and test
      #   run: |
      #     npm install -g pnpm
      #     pnpm install
      #     pnpm run build   
      #     ls ./dist

      #- uses: actions/checkout@v4
      - name: copy file via ssh password
        uses: appleboy/scp-action@v0.1.7
        with:
          host: 198.46.248.64
          username: root
          password: ${{ secrets.SERVER_PASS }}
          #port: ""
          source: "./main,config/*,config.yaml,db.db"
          target: /usr/local/goserver/docker

      - name: executing remote ssh commands using password
        uses: appleboy/ssh-action@v0.1.8
        with:
          host: 198.46.248.64
          username: root
          password: ${{ secrets.SERVER_PASS }}
          # port: ${{ secrets.PORT }}
          script: |
              ls -al
              cd /usr/local/goserver/docker
              chmod 777 main
              docker-compose build
              docker-compose up -d
              

    
    
